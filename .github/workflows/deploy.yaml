# .github/workflows/deploy.yml
name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-push-deploy:
    if: github.repository == 'Muxi-X/forum-be'
    runs-on: ubuntu-latest
    env:
      REGISTRY: registry.cn-shenzhen.aliyuncs.com/muxi
      IMAGE_TAG: latest
      SSH_HOST: ${{ secrets.DEV_SERVER }}
      SSH_USER: ${{ secrets.DEV_SERVER_USER }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Aliyun Registry
        uses: docker/login-action@v2
        with:
          registry: registry.cn-shenzhen.aliyuncs.com
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}

      - name: Detect changed back-end services
        id: detect
        run: |
          SERVICES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} \
            | awk -F/ '/^microservice\/[^\/]+/ {print $2}' \
            | sort -u)
          if [ -n "$SERVICES" ]; then
            echo "$SERVICES" > services.txt
            # 把多行服务列表折成一行
            ONE_LINE=$(echo "$SERVICES" | paste -sd ' ')
            echo "list=$ONE_LINE" >> $GITHUB_OUTPUT
          else
            echo "list=" >> $GITHUB_OUTPUT
          fi

      - name: Build & push via Makefile
        if: steps.detect.outputs.list != ''
        run: |
          while read svc; do
            echo "» Build & push forum_be_$svc"
            SERVICE=$svc REGISTRY=$REGISTRY IMAGE_TAG=$IMAGE_TAG make docker-build
            SERVICE=$svc REGISTRY=$REGISTRY IMAGE_TAG=$IMAGE_TAG make docker-push
          done < services.txt

      - name: Prepare SSH
        if: steps.detect.outputs.list != ''
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEV_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H $SSH_HOST >> ~/.ssh/known_hosts

      - name: Deploy on remote (single SSH)
        if: steps.detect.outputs.list != ''
        run: |
          ssh $SSH_USER@$SSH_HOST bash -s <<'EOF'
            cd ~/forum
            for svc in $(cat services.txt); do
              SERVICE=forum_be_$svc
              IMAGE=${REGISTRY}/$SERVICE:${IMAGE_TAG}
              echo "» Deploying $SERVICE → $IMAGE"
              docker rm -f "$SERVICE"    || true
              docker rmi -f "$IMAGE"     || true
              IMAGE="$IMAGE" docker compose up -d "$SERVICE"
            done
          EOF
