basePath: /api/v1
definitions:
  ListResponse:
    properties:
      count:
        type: integer
      list:
        items:
          $ref: '#/definitions/User'
        type: array
    type: object
  LoginRequest:
    properties:
      oauth_code:
        type: string
    type: object
  LoginResponse:
    properties:
      redirect_url:
        type: string
      token:
        type: string
    type: object
  RegisterRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  Response:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  UpdateInfoRequest:
    properties:
      avatar_url:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      real_name:
        type: string
      tel:
        type: string
    type: object
  User:
    properties:
      avatar:
        type: string
      email:
        type: string
      group:
        type: integer
      id:
        type: integer
      name:
        type: string
      real_name:
        type: string
      role:
        type: integer
      team:
        type: integer
    type: object
  UserProfile:
    properties:
      avatar:
        type: string
      email:
        type: string
      group:
        type: integer
      id:
        type: integer
      name:
        type: string
      real_name:
        type: string
      role:
        type: integer
      team:
        type: integer
      tel:
        type: string
    type: object
host: work.test.muxi-tech.xyz ///////
info:
  contact: {}
  description: The gateway of forum
  title: forum-gateway
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: login the workbench
      parameters:
      - description: login_request
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/LoginResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Response'
      summary: login api
      tags:
      - auth
  /auth/signup:
    post:
      consumes:
      - application/json
      description: register user
      parameters:
      - description: register_request
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/RegisterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Response'
      summary: register api
      tags:
      - auth
  /user:
    put:
      consumes:
      - application/json
      description: 修改用户个人信息
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: update_info_request
        in: body
        name: object
        required: true
        schema:
          $ref: '#/definitions/UpdateInfoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Response'
      summary: update info api
      tags:
      - user
  /user/list/{group_id}/{team_id}:
    get:
      consumes:
      - application/json
      description: 通过 group 和 team 获取 user_list
      parameters:
      - description: limit
        in: query
        name: limit
        type: integer
      - description: page
        in: query
        name: page
        type: integer
      - description: last_id
        in: query
        name: last_id
        type: integer
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      - description: group_id
        in: path
        name: group_id
        required: true
        type: integer
      - description: team_id
        in: path
        name: team_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Response'
      summary: get user_list api
      tags:
      - user
  /user/myprofile:
    get:
      consumes:
      - application/json
      description: 获取 my 完整 user 信息
      parameters:
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserProfile'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Response'
      summary: get my_profile api
      tags:
      - user
  /user/profile/{id}:
    get:
      consumes:
      - application/json
      description: 通过 userId 获取完整 user 信息
      parameters:
      - description: user_id
        in: path
        name: id
        required: true
        type: integer
      - description: token 用户令牌
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/UserProfile'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/Response'
      summary: get user_profile api
      tags:
      - user
swagger: "2.0"
tags:
- description: 用户服务
  name: user
- description: 认证服务
  name: auth
