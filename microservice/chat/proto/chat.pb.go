// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/chat.proto

package chat

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	client "github.com/micro/go-micro/client"
	server "github.com/micro/go-micro/server"
	context "golang.org/x/net/context"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PushRequest struct {
	UserId               uint32   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TargetUserId         uint32   `protobuf:"varint,2,opt,name=target_user_id,json=targetUserId,proto3" json:"target_user_id,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PushRequest) Reset()         { *m = PushRequest{} }
func (m *PushRequest) String() string { return proto.CompactTextString(m) }
func (*PushRequest) ProtoMessage()    {}
func (*PushRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7e7dde45555b7d, []int{0}
}

func (m *PushRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushRequest.Unmarshal(m, b)
}
func (m *PushRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushRequest.Marshal(b, m, deterministic)
}
func (m *PushRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushRequest.Merge(m, src)
}
func (m *PushRequest) XXX_Size() int {
	return xxx_messageInfo_PushRequest.Size(m)
}
func (m *PushRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PushRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PushRequest proto.InternalMessageInfo

func (m *PushRequest) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

func (m *PushRequest) GetTargetUserId() uint32 {
	if m != nil {
		return m.TargetUserId
	}
	return 0
}

func (m *PushRequest) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type Response struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7e7dde45555b7d, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

type GetQueueRequest struct {
	UserId               uint32   `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetQueueRequest) Reset()         { *m = GetQueueRequest{} }
func (m *GetQueueRequest) String() string { return proto.CompactTextString(m) }
func (*GetQueueRequest) ProtoMessage()    {}
func (*GetQueueRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7e7dde45555b7d, []int{2}
}

func (m *GetQueueRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetQueueRequest.Unmarshal(m, b)
}
func (m *GetQueueRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetQueueRequest.Marshal(b, m, deterministic)
}
func (m *GetQueueRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetQueueRequest.Merge(m, src)
}
func (m *GetQueueRequest) XXX_Size() int {
	return xxx_messageInfo_GetQueueRequest.Size(m)
}
func (m *GetQueueRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetQueueRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetQueueRequest proto.InternalMessageInfo

func (m *GetQueueRequest) GetUserId() uint32 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type GetQueueResponse struct {
	List                 []*Queue `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetQueueResponse) Reset()         { *m = GetQueueResponse{} }
func (m *GetQueueResponse) String() string { return proto.CompactTextString(m) }
func (*GetQueueResponse) ProtoMessage()    {}
func (*GetQueueResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7e7dde45555b7d, []int{3}
}

func (m *GetQueueResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetQueueResponse.Unmarshal(m, b)
}
func (m *GetQueueResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetQueueResponse.Marshal(b, m, deterministic)
}
func (m *GetQueueResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetQueueResponse.Merge(m, src)
}
func (m *GetQueueResponse) XXX_Size() int {
	return xxx_messageInfo_GetQueueResponse.Size(m)
}
func (m *GetQueueResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetQueueResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetQueueResponse proto.InternalMessageInfo

func (m *GetQueueResponse) GetList() []*Queue {
	if m != nil {
		return m.List
	}
	return nil
}

type Queue struct {
	User_Id              uint32   `protobuf:"varint,1,opt,name=user_Id,json=userId,proto3" json:"user_Id,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Queue) Reset()         { *m = Queue{} }
func (m *Queue) String() string { return proto.CompactTextString(m) }
func (*Queue) ProtoMessage()    {}
func (*Queue) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7e7dde45555b7d, []int{4}
}

func (m *Queue) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Queue.Unmarshal(m, b)
}
func (m *Queue) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Queue.Marshal(b, m, deterministic)
}
func (m *Queue) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Queue.Merge(m, src)
}
func (m *Queue) XXX_Size() int {
	return xxx_messageInfo_Queue.Size(m)
}
func (m *Queue) XXX_DiscardUnknown() {
	xxx_messageInfo_Queue.DiscardUnknown(m)
}

var xxx_messageInfo_Queue proto.InternalMessageInfo

func (m *Queue) GetUser_Id() uint32 {
	if m != nil {
		return m.User_Id
	}
	return 0
}

func (m *Queue) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*PushRequest)(nil), "chat.PushRequest")
	proto.RegisterType((*Response)(nil), "chat.Response")
	proto.RegisterType((*GetQueueRequest)(nil), "chat.GetQueueRequest")
	proto.RegisterType((*GetQueueResponse)(nil), "chat.GetQueueResponse")
	proto.RegisterType((*Queue)(nil), "chat.Queue")
}

func init() { proto.RegisterFile("proto/chat.proto", fileDescriptor_ed7e7dde45555b7d) }

var fileDescriptor_ed7e7dde45555b7d = []byte{
	// 254 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x51, 0x4d, 0x4f, 0xc2, 0x40,
	0x10, 0xb5, 0x80, 0x05, 0xa7, 0x8a, 0x38, 0x89, 0xda, 0x70, 0xb1, 0xd9, 0x78, 0x68, 0x4c, 0xc4,
	0x04, 0x6e, 0x7a, 0xe4, 0x60, 0xb8, 0x69, 0x8d, 0x67, 0xb2, 0xc2, 0x48, 0x9b, 0xa8, 0xc5, 0x9d,
	0x59, 0x13, 0xff, 0xbd, 0x61, 0x37, 0x8b, 0xd8, 0x8b, 0xb7, 0x79, 0x1f, 0xd3, 0x79, 0xaf, 0x0b,
	0x83, 0xb5, 0xa9, 0xa5, 0xbe, 0x59, 0x94, 0x5a, 0x46, 0x6e, 0xc4, 0xce, 0x66, 0x56, 0xaf, 0x90,
	0x3c, 0x58, 0x2e, 0x0b, 0xfa, 0xb4, 0xc4, 0x82, 0xe7, 0xd0, 0xb5, 0x4c, 0x66, 0x5e, 0x2d, 0xd3,
	0x28, 0x8b, 0xf2, 0xa3, 0x22, 0xde, 0xc0, 0xd9, 0x12, 0x2f, 0xa1, 0x2f, 0xda, 0xac, 0x48, 0xe6,
	0x41, 0x6f, 0x39, 0xfd, 0xd0, 0xb3, 0xcf, 0xde, 0x95, 0x42, 0xf7, 0x9d, 0x98, 0xf5, 0x8a, 0xd2,
	0x76, 0x16, 0xe5, 0x07, 0x45, 0x80, 0x0a, 0xa0, 0x57, 0x10, 0xaf, 0xeb, 0x0f, 0x26, 0x75, 0x05,
	0xc7, 0xf7, 0x24, 0x8f, 0x96, 0x2c, 0xfd, 0x77, 0x57, 0x4d, 0x60, 0xf0, 0xeb, 0xf5, 0xfb, 0x78,
	0x01, 0x9d, 0xb7, 0x8a, 0x25, 0x8d, 0xb2, 0x76, 0x9e, 0x8c, 0x93, 0x91, 0x2b, 0xe5, 0x2d, 0x4e,
	0x50, 0xb7, 0xb0, 0xef, 0xe0, 0xf6, 0xb3, 0xb3, 0x66, 0x9d, 0x9d, 0xa0, 0xad, 0x3f, 0x41, 0xc7,
	0xdf, 0x90, 0x4c, 0x4b, 0x2d, 0x4f, 0x64, 0xbe, 0xaa, 0x05, 0xe1, 0x35, 0xc4, 0x53, 0x43, 0x5a,
	0x08, 0x4f, 0xfc, 0x9d, 0x9d, 0xbf, 0x35, 0xec, 0x7b, 0x6a, 0x5b, 0x6c, 0x0f, 0xef, 0xa0, 0x17,
	0xe2, 0xe2, 0xa9, 0x57, 0x1b, 0x55, 0x87, 0x67, 0x4d, 0x3a, 0x2c, 0xbf, 0xc4, 0xee, 0x61, 0x26,
	0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x25, 0x20, 0x53, 0xcb, 0xac, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ client.Option
var _ server.Option

// Client API for ChatService service

type ChatServiceClient interface {
	Create(ctx context.Context, in *PushRequest, opts ...client.CallOption) (*Response, error)
	GetQueue(ctx context.Context, in *GetQueueRequest, opts ...client.CallOption) (*GetQueueResponse, error)
}

type chatServiceClient struct {
	c           client.Client
	serviceName string
}

func NewChatServiceClient(serviceName string, c client.Client) ChatServiceClient {
	if c == nil {
		c = client.NewClient()
	}
	if len(serviceName) == 0 {
		serviceName = "chat"
	}
	return &chatServiceClient{
		c:           c,
		serviceName: serviceName,
	}
}

func (c *chatServiceClient) Create(ctx context.Context, in *PushRequest, opts ...client.CallOption) (*Response, error) {
	req := c.c.NewRequest(c.serviceName, "ChatService.Create", in)
	out := new(Response)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *chatServiceClient) GetQueue(ctx context.Context, in *GetQueueRequest, opts ...client.CallOption) (*GetQueueResponse, error) {
	req := c.c.NewRequest(c.serviceName, "ChatService.GetQueue", in)
	out := new(GetQueueResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ChatService service

type ChatServiceHandler interface {
	Create(context.Context, *PushRequest, *Response) error
	GetQueue(context.Context, *GetQueueRequest, *GetQueueResponse) error
}

func RegisterChatServiceHandler(s server.Server, hdlr ChatServiceHandler, opts ...server.HandlerOption) {
	s.Handle(s.NewHandler(&ChatService{hdlr}, opts...))
}

type ChatService struct {
	ChatServiceHandler
}

func (h *ChatService) Create(ctx context.Context, in *PushRequest, out *Response) error {
	return h.ChatServiceHandler.Create(ctx, in, out)
}

func (h *ChatService) GetQueue(ctx context.Context, in *GetQueueRequest, out *GetQueueResponse) error {
	return h.ChatServiceHandler.GetQueue(ctx, in, out)
}
